@page
@model csci340_iseegreen.Pages.Search.IndexModel

@{
    ViewData["Title"] = "Search";
}
<br>

<div id="header_box">
<h1 id="search_heading">Search</h1>
</div>

<form>
    <p>

        <select class="custom_select" asp-for="CategoryFilter" asp-items="Model.Categories" asp-route-CategoryFilter="@Model.CurrentCat">
            <option id="op" value="">Category</option>
            @foreach ((string cat, string desc) in Model.CategoryOptions)
            {
                <option value="@cat">@desc</option>
            }
        </select>

        @* @Html.DropDownList("CategoryFilter", ViewBag["FamilyList"] as SelectList, "Family", new { @class = "custom_select" }) *@
        @* @Html.DropDownListFor(Model.Families, selectList, ViewData["UserTypeOptions"], "Select one") *@
        

        @Html.DropDownListFor(model => model.SelectListItems, Model.SelectListItems as SelectList, new { @class = "custom_select" })


        



        <input type="search" id="famsearch" placeholder="Family" asp-for="FamilyString" oninput="hidePlaceholderText(2)" />

        <input type="text" id="famsearch" placeholder="Family" asp-for="FamilyString" oninput="hidePlaceholderText(2)" />

        <input type="text" id="genussearch" placeholder="Genus" asp-for="GenusString" oninput="hidePlaceholderText(1)" />
    
        <input type="text" id="speciesearch" placeholder="Species" asp-for="SearchString" oninput="hidePlaceholderText(0)" />
        <input type="submit" value="Apply Filters"/>

        <a href="./Search">Clear</a>

        <p id="placeholderText">placeholder autocomplete</p>

    </p>
</form>
<script src="https://ajax.googleapis.com/ajax/libs/jquery/3.4.1/jquery.min.js"></script>
<body>
  <select id="select-state" placeholder="Pick a state...">
    <option value="">Select a state...</option>
    <option value="AL">Alabama</option>
    <option value="AK">Alaska</option>
    <option value="AZ">Arizona</option>
    <option value="AR">Arkansas</option>
    <option value="CA">California</option>
    <option value="CO">Colorado</option>
    <option value="CT">Connecticut</option>
    <option value="DE">Delaware</option>
    <option value="DC">District of Columbia</option>
    <option value="FL">Florida</option>
    <option value="GA">Georgia</option>
    <option value="HI">Hawaii</option>
    <option value="ID">Idaho</option>
    <option value="IL">Illinois</option>
    <option value="IN">Indiana</option>
  </select>
</body>
</html>


<table class="table">
    <thead>
        <tr>
            <th id="check">

            </th>
             <th id ="cat">
                @Html.DisplayNameFor(model => model.Taxa[0].Genus.Family.Category)
            </th>
            <th id ="family">
                @Html.DisplayNameFor(model => model.Taxa[0].Genus.Family)
            </th>
            <th id="genus">
                <a asp-page="./Index" asp-route-sortOrder="@Model.GenusSort" asp-route-CategoryFilter="@Model.CurrentCat" asp-route-SearchString="@Model.CurrentSpecies"
   asp-route-GenusString="@Model.CurrentGenus"
   asp-route-FamilyString="@Model.CurrentFamily">
                    @Html.DisplayNameFor(model => model.Taxa[0].Genus)
                </a>

            </th>
            <th id="species">
                <a asp-page="./Index" asp-route-sortOrder="@Model.SpeciesSort" asp-route-CategoryFilter="@Model.CurrentCat" asp-route-SearchString="@Model.CurrentSpecies"
   asp-route-GenusString="@Model.CurrentGenus"
   asp-route-FamilyString="@Model.CurrentFamily">
                    @Html.DisplayNameFor(model => model.Taxa[0].SpecificEpithet)
                </a>

            </th>
            <th id="infra">
                @Html.DisplayNameFor(model => model.Taxa[0].InfraspecificEpithet)
            </th>
            <th id="rank">
                @Html.DisplayNameFor(model => model.Taxa[0].TaxonRank)
            </th>

        </tr>
    </thead>
    <tbody>
@foreach (var item in Model.Taxa) {
        <tr>
            <td id="check">
                <a class="popup" id="plus" asp-area="" asp-page="./Details" asp-route-KewID="@item.KewID">&#x2795</a>
            </td>
            <td id="cat">
                @Html.DisplayFor(modelItem => item.Genus.Family.Category.Description)
            </td>
            <td id="family">
                @Html.DisplayFor(modelItem => item.Genus.FamilyID)
            </td>
            <td id="genus">
                @Html.DisplayFor(modelItem => item.GenusID)
            </td>
            <td id="species">
                @Html.DisplayFor(modelItem => item.SpecificEpithet)
            </td>
            <td id="infra">
                @Html.DisplayFor(modelItem => item.InfraspecificEpithet)
            </td>
            <td id="rank">
                @Html.DisplayFor(modelItem => item.TaxonRank)
            </td>


        </tr>
}
    </tbody>
</table>

@{
    var prevDisabled = !Model.Taxa.HasPreviousPage ? "disabled" : "";
    var nextDisabled = !Model.Taxa.HasNextPage ? "disabled" : "";
}

<a id="prevnex"
    asp-page="./Index"
    asp-route-CategoryFilter="@Model.CurrentCat"
    asp-route-sortOrder="@Model.CurrentSort"
   asp-route-pageIndex="@(Model.Taxa.PageIndex - 1)"
   asp-route-SearchString="@Model.CurrentSpecies"
   asp-route-GenusString="@Model.CurrentGenus"
   asp-route-FamilyString="@Model.CurrentFamily"
   asp-route-currentFilter="@Model.CurrentFilter"
   class="btn btn-primary @prevDisabled">
    Previous
</a>
<a id="prevnex"
    asp-page="./Index"
    asp-route-CategoryFilter="@Model.CurrentCat"
    asp-route-sortOrder="@Model.CurrentSort"
   asp-route-pageIndex="@(Model.Taxa.PageIndex + 1)"
   asp-route-currentFilter="@Model.CurrentFilter"
    asp-route-GenusString="@Model.CurrentGenus"
    asp-route-SearchString="@Model.CurrentSpecies"
    asp-route-FamilyString="@Model.CurrentFamily"
   class="btn btn-primary @nextDisabled">
    Next
</a>

<script>
    $(document).ready(function () {
    $('select').selectize({
        sortField: 'text'
    });
    });
    function hidePlaceholderText(level) {
        const placeholderElement = document.getElementById('placeholderText');
        familiesString = document.getElementById('famsearch').value;
        generaString = document.getElementById('genussearch').value;
        speciesString = document.getElementById('speciesearch').value;

        // Case 0:#check familiesString has length of 2 or greater
        // Case 1:#check generaString has length of 2 or greater
        // Case 2:#check speciesString has length of 2 or greater

        
        if (familiesString.length >= 2) {
            level = 2;
            searchText = familiesString;
        } else if (generaString.length >= 2) {
            level = 1;
            searchText = generaString;
        } else if (speciesString.length >= 4) {
            level = 0;
            searchText = speciesString;
        } else {
            level = -1;
            searchText = "n";
        }

        // Check if any of the input fields have at least 2 characters
        if (searchText.length >= 2) {

            //const searchText = "quercus";

            console.log('Search text:', searchText); // Log the search text
            console.log('Level:', level); // Log the level
            console.log("family string:", familiesString);
            console.log("genus string:", generaString);
            console.log("species string:", speciesString);
            
            // Clear the existing content
            placeholderElement.innerHTML = '';

            fetch(`/Search/Index?handler=LikelyMatches&query=${searchText}&level=${level}`)
                .then(response => response.json())
                .then(familyString => {
                    familyString.forEach(plant => {
                        console.log(plant); 
                        placeholderElement.innerHTML += `<div>${plant}</div>`; 
                    });
                })
    .catch(error => {
        console.error('Error fetching likely matches:', error);
    });

        } else {
            console.log('Reset placeholder text'); 
            placeholderElement.innerHTML = 'placeholder autocomplete'; 
        }
    }
</script>






<style>
    #plant1 {
        accent-color: rgb(188, 188, 188);
        height: 15px;
        width: 15px;
        vertical-align: middle;
    }

    #check {
        width: 20px;
    }

    #plus {
        vertical-align: auto;
        margin: auto;
        text-decoration: none;
    }

    .dropdown {
        display: none;
    }


</style>